# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "provar_regression" visible in the Actions tab as "Regression"
  provar_regression:
    name: "Regression"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
         provar_major_version: latest
         provar_build_version: latest
         PROVAR_HOME: ${{ github.workspace }}/ProvarHome
         ProvarSecretsPassword: ${{ secrets.PROVARSECRETSPASSWORD}}
         BROWSER: Chrome_Headless
         LICENSE_PATH: ${{ github.workspace }}/Provar
         SMTP_PATH: ${{ github.workspace }}/Test/.smtp
         PLAN_NAME: SmokeTest
         PROJECT_HOME: ${{ github.workspace }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v4
        - uses: actions/setup-java@v3.4.1
          with:
            java-version: '11'
            distribution: 'temurin'
      
        - name: Download Provar CLI
          uses: wei/wget@v1.1.1
          with:
            args: -nv https://download.provartesting.com/${{ env.provar_major_version }}/Provar_ANT_${{ env.provar_build_version }}.zip

        - name: Setup Provar CLI
          run: |
            echo "Unzip Provar ANT Files"
            unzip -q Provar_ANT_${{ env.provar_build_version }}.zip -d $GITHUB_WORKSPACE/ProvarHome
            ls -la ${{ env.PROVAR_HOME }}
      
        - name: Run Provar Tests
          run: xvfb-run ant -f ${{ github.workspace }}/ANT/build.xml
        
        
        - name: Upload Test Results Folder
          uses: actions/upload-artifact@v3.1.0
          if: ${{ always() }}
          with:
            # Artifact name
            name: TestResults # optional, default is artifact
            # A file, directory or wildcard pattern that describes what to upload - path must already exist!
            path: '**/ANT/Results'
            # The desired behavior if no files are found using the provided path.
            if-no-files-found: error
            retention-days: 14 # optional
  
  # This workflow contains a single job called "test_results" visible in the Actions tab as "Publish Test Results"
  test_results:
              name: "Publish Test Results"
              needs: provar_regression
              runs-on: ubuntu-latest
              # the linux_regression job might be skipped, we don't need to run this job then
              if: success() || failure()
              steps:
                 - name: Download Artifacts
                   uses: actions/download-artifact@v3.0.0
                   with:
                     path: artifacts

                 - name: Publish JUnit Test Results
                   uses: mikepenz/action-junit-report@v4.3.1
                   with:
                       token: ${{ secrets.GITHUB_TOKEN }}
                       report_paths: "**/Results/*.xml"
                       check_name: "Provar Regression Test Report"
                       fail_on_failure: true
                       include_passed: true
                       detailed_summary: true
